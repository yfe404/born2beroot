# Born2beRoot - Project Notes & Configuration Guide

## Initial Setup

### âœ” Base Image

* Disk partitioning is configured as expected, including bonus structure.

---

## SSH Configuration

### Goal:

* SSH server must run on **port 4242**.
* **Root login must be disabled**.

### Steps:

1. Update APT sources if necessary (CD-ROM references may be present):

   ```bash
   sudo nano /etc/apt/sources.list
   sudo apt update
   ```

2. Install OpenSSH:

   ```bash
   sudo apt install openssh-server
   ```

3. Edit SSH config:

   ```bash
   sudo nano /etc/ssh/sshd_config
   # Set the following lines:
   Port 4242
   PermitRootLogin no
   ```

4. Enable and start the service:

   ```bash
   sudo systemctl enable --now sshd
   ```

5. Test SSH:

   * With NAT: use VirtualBox port forwarding.
   * With bridged mode: connect directly to the VM's IP.

---

## Firewall (UFW)

### Goal:

* Enable UFW.
* Allow only SSH traffic on port 4242.

### Steps:

```bash
sudo apt install ufw
sudo ufw allow 4242/tcp
sudo ufw enable
```

> Note: `ufw allow ssh` won't work since SSH is not on the default port.

---

## Hostname Setup

```bash
sudo hostnamectl set-hostname <your_login>42
```

---

## Password Policy Configuration

### Requirements (from subject):

1. Password expires after 30 days
2. Cannot be changed more often than every 2 days
3. Warn users 7 days before expiration
4. Must contain:

   * â‰¥10 characters
   * Uppercase, lowercase, digit
   * No username
   * No more than 3 identical characters in a row
5. Root is **exempt only from the "7 new character" difference rule**

### Files & Configuration:

#### 1. `/etc/security/pwquality.conf`

```ini
minlen = 10
dcredit = -1
ucredit = -1
lcredit = -1
maxrepeat = 3
usercheck = 1
```

#### 2. `/etc/pam.d/common-password`

```bash
password requisite pam_pwquality.so retry=3 enforce_for_root
password required pam_pwhistory.so remember=5 difok=7
```

* `pam_pwquality`: enforces complexity (applies to root)
* `pam_pwhistory`: enforces reuse prevention & difference (does **not** apply to root)

#### 3. `/etc/login.defs`

```ini
PASS_MAX_DAYS   30
PASS_MIN_DAYS   2
PASS_WARN_AGE   7
```

* Applies to **new users** only.

#### 4. Apply expiration rules to existing users:

```bash
sudo chage -M 30 -m 2 -W 7 root
sudo chage -M 30 -m 2 -W 7 <your_user>
```

### Validation:

```bash
sudo chage -l <username>
```

---

## Sudo Configuration

```bash
sudo apt install sudo
sudo adduser <your_user> sudo
```

> User must also be in `user42` group:

```bash
sudo groupadd user42
sudo usermod -aG user42 <your_user>
```

### Configuration Goals:

* Max 3 wrong password attempts
* Custom error message
* Log sudo usage to `/var/log/sudo/`
* TTY required
* Secure path

Use `visudo` to apply:

```bash
Defaults        badpass_message="Try again, mortal."
Defaults        logfile="/var/log/sudo/sudo.log"
Defaults        requiretty
Defaults        secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
```

---

## Monitoring Script Notes

### Metrics Required:

* OS & Kernel
* Physical & virtual CPUs
* RAM & disk usage (percentage)
* CPU load
* Last boot time
* Is LVM used
* TCP connections (established)
* Logged-in users
* IPv4 & MAC
* Sudo command count

### Useful Commands:

```bash
uname -a
lscpu
free -m
df -h
uptime -s
ss -tn state established | tail -n +2 | wc -l
who | wc -l
ip -4 a | grep inet
ip link | grep ether
journalctl _COMM=sudo | grep COMMAND= | wc -l
```

### LVM Check:

```bash
if sudo pvdisplay 2>/dev/null | grep -q UUID; then
    echo "LVM use: yes"
else
    echo "LVM use: no"
fi
```

---

## WordPress (Bonus - LLMP Stack)

Follow guides:

* [HowToForge Lighttpd + MariaDB + PHP-FPM](https://www.howtoforge.com/how-to-install-lighttpd-with-mariadb-and-php-fpm-on-ubuntu-22-04/)
* [WordPress setup](https://developer.wordpress.org/advanced-administration/before-install/howto-install/)

Create DB:

```bash
sudo mariadb
CREATE DATABASE wordpress;
CREATE USER 'wordpress'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON wordpress.* TO 'wordpress'@'localhost';
FLUSH PRIVILEGES;
EXIT;
```

---

## Bonus Service: Ollama (LLM Server)

### Why Ollama?

* Easy to install and maintain, minimal configuration required.

* Lightweight and efficient for local testing of large language models without cloud dependency.

* Educationally relevant

* Security benefit: running LLMs locally avoids exposing data to external APIs.

* Useful for local model inference or experimentation.

### Setup (example for Debian-based):

1. Download and install Ollama:

   ```bash
   curl -fsSL https://ollama.com/install.sh | sh
   ```

2. Enable the Ollama service:

   ```bash
   sudo systemctl enable --now ollama
   ```

3. (Optional) Pull a model:

   ```bash
   ollama pull llama2
   ```

4. Confirm itâ€™s working:

   ```bash
   curl http://localhost:11434
   ```

> ðŸ“Œ Remember to allow port 11434 in UFW **only if you want remote access**.

---

## Defense Checklist

### AppArmor

```bash
sudo aa-status
sudo systemctl is-enabled apparmor
```

### LVM + Encryption

```bash
lsblk
sudo pvdisplay
sudo vgdisplay
sudo lvdisplay
```

### SSH on Port 4242

```bash
sudo ss -tulpn | grep ssh
sudo grep Port /etc/ssh/sshd_config
sudo grep PermitRootLogin /etc/ssh/sshd_config
```

### UFW

```bash
sudo ufw status verbose
```

### User & Group Setup

```bash
id <your_login>
getent group user42
```

### Sudo

* Check logs in `/var/log/sudo/`
* Confirm TTY mode is enabled
* Confirm secure path and custom message work

---

## References

* Debian Wiki - SSH Configuration: [https://wiki.debian.org/SSH](https://wiki.debian.org/SSH)
* Debian Wiki - Hostname: [https://wiki.debian.org/Hostname](https://wiki.debian.org/Hostname)
* Debian Wiki - UFW: [https://wiki.debian.org/Uncomplicated%20Firewall%20%28ufw%29](https://wiki.debian.org/Uncomplicated%20Firewall%20%28ufw%29)
* Securing Debian Manual - Password Policy: [https://www.debian.org/doc/manuals/securing-debian-manual/ch04s11.en.html](https://www.debian.org/doc/manuals/securing-debian-manual/ch04s11.en.html)
* PAM Cracklib Info: [https://web.archive.org/web/20190313211808/https://www.deer-run.com/\~hal/sysadmin/pam\_cracklib.html](https://web.archive.org/web/20190313211808/https://www.deer-run.com/~hal/sysadmin/pam_cracklib.html)
* Server World Password Policy Guide: [https://www.server-world.info/en/note?os=Debian\_10\&p=password](https://www.server-world.info/en/note?os=Debian_10&p=password)
* man sudoers: [https://www.sudo.ws/docs/man/1.9.1/sudo\_logsrvd.conf.man/](https://www.sudo.ws/docs/man/1.9.1/sudo_logsrvd.conf.man/)
* AskUbuntu CPU Usage: [https://askubuntu.com/questions/274349/getting-cpu-usage-realtime](https://askubuntu.com/questions/274349/getting-cpu-usage-realtime)
* WordPress Setup: [https://developer.wordpress.org/advanced-administration/before-install/howto-install/](https://developer.wordpress.org/advanced-administration/before-install/howto-install/)
* Lighttpd + MariaDB + PHP-FPM: [https://www.howtoforge.com/how-to-install-lighttpd-with-mariadb-and-php-fpm-on-ubuntu-22-04/](https://www.howtoforge.com/how-to-install-lighttpd-with-mariadb-and-php-fpm-on-ubuntu-22-04/)
* Ollama Docs: [https://ollama.com/](https://ollama.com/)

